intro
motivation
how-do-we-start-using-rtorch
getting-the-pytorch-version
pytorch-configuration
what-can-you-do-with-rtorch
callable-pytorch-modules
the-torchvision-module
np-the-numpy-module
python-built-in-functions
pytorch-and-numpy
callable-pytorch-modules-from-rtorch
the-torchvision-module-1
the-numpy-module
common-array-and-tensor-operations-in-numpy-and-pytorch
python-built-in-functions-1
rtorch-vs-pytorch-whats-different
calling-objects-from-pytorch
call-modules-and-functions-from-torch
show-the-attributes-methods-of-a-class-or-pytorch-object
how-to-iterate-through-datasets
enumeration
using-enumerate-and-iterate
using-a-for-loop-to-iterate
zero-gradient
version-in-python
version-in-r
r-generics-for-pytorch-functions
converting-tensors
transforming-a-tensor-from-numpy-and-viceversa
convert-a-tensor-to-numpy-object
convert-a-numpy-object-to-an-r-object
transforming-a-tensor-from-pytorch-to-r-and-viceversa
tensors
tensor-data-types
arithmetic-of-tensors
add-tensors
multiply-a-tensor-by-a-scalar
numpy-and-pytorch
tuples-python-and-vectors-r
make-a-numpy-array-a-tensor-with-as_tensor
tensor-to-array-and-viceversa
create-tensors
tensor-resizing
concatenate-tensors
reshape-tensors
with-function-chunk
with-index_select
special-tensors
identity-matrix
ones
zeros
tensor-fill
initialize-a-linear-or-log-scale-tensor
inplace-out-of-place
access-to-tensor-elements
using-indices-to-access-elements
using-the-take-function
other-tensor-operations
cross-product
dot-product
logical-operations
logical-not
distributions
uniform-matrix
binomial-distribution
exponential-distribution
weibull-distribution
linearalgebra
scalars
vectors
matrices
d-tensors
transpose-of-a-matrix
vectors-special-case-of-a-matrix
tensor-arithmetic
add-a-scalar-to-a-tensor
multiplying-tensors
dot-product-1
dot-product-of-2d-array-using-python
dot-product-of-2d-array-using-r
dot-product-with-mm-and-matmul-functions
creating-pytorch-classes
build-a-pytorch-model-class
example-1-a-neural-network-with-one-layer
example-2-logistic-regression
mnistdigits
hyperparameters
read-datasets
define-the-model
training
prediction
save-the-model
example-1-python-mnist-handwritten-digits
example-2-a-classification-problem-with-logistic-regression
code-in-python
simple-linear-regression
introduction
generate-the-dataset
convert-arrays-to-tensors
converting-from-numpy-to-tensor
creating-the-network-model
optimizer-and-loss
training-1
results
rainfall-prediction-with-linear-regression
training-data
convert-arrays-to-tensors-1
build-the-model
generate-predictions
loss-function
step-by-step-process
compute-the-losses
compute-gradients
reset-the-gradients
adjust-weights-and-biases-using-gradient-descent
all-together-train-for-multiple-epochs
neural-networks-using-numpy-r-base-rtorch-and-pytorch
a-neural-network-with-numpy
a-neural-network-with-r-base
a-neural-network-in-rtorch
load-the-libraries
dataset
initialize-the-weights
iterate-through-the-dataset
iterate-50-times
run-it-at-100-iterations
iterations
iterations-1
same-neural-network-but-written-in-pytorch
exercise
a-step-by-step-neural-network-in-rtorch
introduction-1
select-device
create-the-dataset
define-the-model-1
the-loss-function
iterate-through-batches
using-r-generics-to-simplify-tensor-operations
a-more-elegant-way-of-writing-the-neural-network
